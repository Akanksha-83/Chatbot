import nltk
import random
import string
import warnings
warnings.filterwarnings('ignore')
nltk. download("punkt")
nltk. download("wordnet")nltk. download("omw-1 .4")
f = open('C://Users//savir//Downloads//Act1Scene1 .txt', 'r',
errors='ignore')
raw = f. read()
raw = raw. lower()
sent_tokens = nltk. sent_tokenize(raw) #converts to list of
scentences
word_tokens = nltk.word_tokenize(raw) #converts to list of
words
sentToken = sent_tokens[:4]
#print(sentToken)
wordToken = word_tokens[:4]
#print(wordToken)
lemmer = nltk. stem.Word NetLemmatizer()
def LemTokens(tokens):
return [lemmer. lemmatize(token) for token in tokens]rem-
ove_punct_dict = dict((ord(punct), None) for punct in string.
punctuation)
def LemNormalize(text):
return LemTokens(nltk.word_tokenize(text. lower() .translate
(remove_punct_dict)))
GREETING_INPUTS = ("hello", "hi", "greetings", "sup", "what's
up", "hey")
GREETING_RESPONSES = ["hi", "hey", "nods", "hi there", "hello",
" I am glad! you are talking to me"]def greeting(scentence):
for word in scentence. split():
if word. lower() in GREETING_INPUTS:
return random. choice(GREETING_RESPONSES)
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn. metrics.pairwise import cosine_similarity
def response(user_response):chatbot_response = ''sent_
tokens. append(user_response)
TfidfVec = TfidfVectorizer(tokenizer=LemNormalize, stop_
words="english")tfidf = TfidfVec.fit_transform(sent_tokens)
vals = cosine_similarity(tfidf[-1], tfidf)
idx = vals. argsort()[0][-2]
flat = vals.flatten()
flat. sort()
req_tfidf = flat[-2]
if(req_tfidf == 0):
chatbot_response = chatbot_response + " I am sorry! I
don't understand you"return chatbot_response
else:chatbot_response=chatbot_response+sent_tokens[idx]
return chatbot_response
flag = True
print("Hello, there my name is Rekha. I will answer your que-
ries. If you want to exit, type Bye!")while(flag==True):
user_response = input()
user_response = user_response. lower()
if(user_response!='bye'):
if user_response == 'thanks' or user_response == 'thank you':
flag = False
print("Rekha: You're welcome!")else:
if(greeting(user_response) !=None):
print("Rekha:" +greeting(user_response))else:
print("Rekha:", end='')
print(response(user_response))
sent_tokens. remove(user_response)else:
flag = False
print("Rekha: Bye! Have a great time!" )